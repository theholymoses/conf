#! /usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Cwd;

# ---------------------------------------- GLOBAL VARIABLES
my $CN = "\e[0m";
my $CR = "\e[1;31m";
my $CG = "\e[1;32m";
my $CM = "\e[1;35m";
my $CC = "\e[1;36m";

my $RECURSIVE = 0;
my $DO_RENAME = 0;
my @files     = ();

my $PROGNAME = qx {basename "$0"};
chomp $PROGNAME;

Getopt::Long::Configure ("bundling");

# ---------------------------------------- SUBS DECLARATIONS
# print usage & exit
# $1 - error message to print before usage
sub usage;

# rename single file if it has whitespaces in it
# $1 filename
sub rename_file;

# iterate over an array of files & dirs
# @1 filenames
# $2 depth
sub process_files;

# ---------------------------------------- MAIN CODE
GetOptions ("r" => \$RECURSIVE,
            "d" => \$DO_RENAME) ||
usage ("Error processing arguments");

@files = @ARGV;

usage ("Provide files to work on") if $#files == -1;

process_files (@files, 0);

# ---------------------------------------- SUBS DEFINITIONS
sub usage
{
  my ($msg) = @_;

  print "${CR}WARNING:${CN} ${msg}\n\n" if ($msg);

  print "${CC}${PROGNAME}${CN} FILES [-rd]\n"                             .
        "Replaces whitespaces of files or directories with underscore.\n" .
        "Default behaviour is to dry run and show what will be done.\n"   .
        "Symlinks are not followed, but are renamed\n"                    .
        "  -${CM}r${CN} -> recursive\n"                                   .
        "  -${CM}d${CN} -> do rename(disable dry run)\n"                  ;

  exit (1);
}

sub rename_file
{
  my ($fname_old) = @_;
  my ($fname_dir, $fname_base_old, $fname_base_new);

  $fname_base_old = qx {basename "$fname_old"};
  chomp $fname_base_old;

  return if ($fname_base_old !~ m { });

  $fname_base_new = $fname_base_old;
  $fname_base_new =~ s {\ }{_}g;

  $fname_dir = qx {dirname "$fname_old"};
  chomp $fname_dir;

  my $file_old = "${fname_dir}/${fname_base_old}";
  my $file_new = "${fname_dir}/${fname_base_new}";

  print " ${CC}-${CN} ${file_old}\n"    .
        " ${CG}+${CN} ${file_new}\n\n"  ;

  if ($DO_RENAME) {
    rename ($file_old, $file_new) ||
    print STDERR "Failed to rename file: ${CR}$!${CN}\n";
  }
}

sub process_files
{
  my $depth = pop (@_);
  for my $file (@_)
  {
    next if $file =~ m{^\.{1,2}$} && $depth > 0;

    if (-l $file || -f _) {
      rename_file ($file);

    } elsif (-d _) {
      if ($RECURSIVE) {
        my $dh;

        if (!opendir ($dh, $file)) {
          print STDERR "Failed to open dir ${CC}${file}${CN}: ${CR}$!${CN}\n";
          next;
        }

        my $current_dir = getcwd;

        chdir ($file);
        process_files (readdir ($dh), $depth + 1);
        chdir ($current_dir);

        closedir ($dh);
      }

      rename_file ($file);

    } else {
      print "Ignoring $file\n";
    }
  }
}

